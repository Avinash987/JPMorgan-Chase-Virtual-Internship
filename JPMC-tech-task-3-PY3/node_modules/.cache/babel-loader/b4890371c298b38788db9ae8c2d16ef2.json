{"ast":null,"code":"import _classCallCheck from \"/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { DataManipulator } from './DataManipulator';\nimport './Graph.css';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Graph)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.table = void 0;\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement('perspective-viewer');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get element from the DOM.\n      console.log('rendering');\n      var elem = document.getElementsByTagName('perspective-viewer')[0];\n      var schema = {\n        price_abc: 'float',\n        price_def: 'float',\n        ratio: 'float',\n        timestamp: 'date',\n        upper_bound: 'float',\n        lower_bound: 'float',\n        trigger_alert: 'float'\n      };\n\n      if (window.perspective && window.perspective.worker()) {\n        this.table = window.perspective.worker().table(schema);\n      }\n\n      if (this.table) {\n        // Load the `table` in the `<perspective-viewer>` DOM reference.\n        elem.load(this.table);\n        elem.setAttribute('view', 'y_line');\n        elem.setAttribute('row-pivots', '[\"timestamp\"]');\n        elem.setAttribute('columns', '[\"ratio\", \"lower_bound\", \"upper_bound\", \"trigger_alert\"]');\n        elem.setAttribute('aggregates', JSON.stringify({\n          price_abc: 'avg',\n          price_def: 'avg',\n          ratio: 'avg',\n          timestamp: 'distinct count',\n          upper_bound: 'avg',\n          lower_bound: 'avg',\n          trigger_alert: 'avg'\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.table) {\n        this.table.update([DataManipulator.generateRow(this.props.data)]);\n      }\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["/home/avinash/workspace/JPMorgna-Chase-Virtual-Internship/JPMC-tech-task-3-PY3/src/Graph.tsx"],"names":["React","Component","DataManipulator","Graph","table","createElement","console","log","elem","document","getElementsByTagName","schema","price_abc","price_def","ratio","timestamp","upper_bound","lower_bound","trigger_alert","window","perspective","worker","load","setAttribute","JSON","stringify","update","generateRow","props","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAO,aAAP;;IASMC,K;;;;;;;;;;;;;;;;;UACJC,K;;;;;;6BAES;AACP,aAAOJ,KAAK,CAACK,aAAN,CAAoB,oBAApB,CAAP;AACD;;;wCAEmB;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,oBAA9B,EAAoD,CAApD,CAAb;AAEA,UAAMC,MAAM,GAAG;AACbC,QAAAA,SAAS,EAAE,OADE;AAEbC,QAAAA,SAAS,EAAE,OAFE;AAGbC,QAAAA,KAAK,EAAE,OAHM;AAIbC,QAAAA,SAAS,EAAE,MAJE;AAKbC,QAAAA,WAAW,EAAE,OALA;AAMbC,QAAAA,WAAW,EAAE,OANA;AAObC,QAAAA,aAAa,EAAE;AAPF,OAAf;;AAUA,UAAIC,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACC,WAAP,CAAmBC,MAAnB,EAA1B,EAAuD;AACrD,aAAKjB,KAAL,GAAae,MAAM,CAACC,WAAP,CAAmBC,MAAnB,GAA4BjB,KAA5B,CAAkCO,MAAlC,CAAb;AACD;;AACD,UAAI,KAAKP,KAAT,EAAgB;AACd;AACAI,QAAAA,IAAI,CAACc,IAAL,CAAU,KAAKlB,KAAf;AACAI,QAAAA,IAAI,CAACe,YAAL,CAAkB,MAAlB,EAA0B,QAA1B;AACAf,QAAAA,IAAI,CAACe,YAAL,CAAkB,YAAlB,EAAgC,eAAhC;AACAf,QAAAA,IAAI,CAACe,YAAL,CAAkB,SAAlB,EAA6B,0DAA7B;AACAf,QAAAA,IAAI,CAACe,YAAL,CAAkB,YAAlB,EAAgCC,IAAI,CAACC,SAAL,CAAe;AAC7Cb,UAAAA,SAAS,EAAE,KADkC;AAE7CC,UAAAA,SAAS,EAAE,KAFkC;AAG7CC,UAAAA,KAAK,EAAC,KAHuC;AAI7CC,UAAAA,SAAS,EAAE,gBAJkC;AAK7CC,UAAAA,WAAW,EAAE,KALgC;AAM7CC,UAAAA,WAAW,EAAE,KANgC;AAO7CC,UAAAA,aAAa,EAAE;AAP8B,SAAf,CAAhC;AASD;AACF;;;yCAEoB;AACnB,UAAI,KAAKd,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAWsB,MAAX,CAAkB,CAChBxB,eAAe,CAACyB,WAAhB,CAA4B,KAAKC,KAAL,CAAWC,IAAvC,CADgB,CAAlB;AAGD;AACF;;;;EAjDiB5B,S;;AAoDpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from '@jpmorganchase/perspective';\nimport { ServerRespond } from './DataStreamer';\nimport { DataManipulator } from './DataManipulator';\nimport './Graph.css';\n\ninterface IProps {\n  data: ServerRespond[],\n}\n\ninterface PerspectiveViewerElement extends HTMLElement {\n  load: (table: Table) => void,\n}\nclass Graph extends Component<IProps, {}> {\n  table: Table | undefined;\n\n  render() {\n    return React.createElement('perspective-viewer');\n  }\n\n  componentDidMount() {\n    // Get element from the DOM.\n    console.log('rendering')\n    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;\n\n    const schema = {\n      price_abc: 'float',\n      price_def: 'float',\n      ratio: 'float',\n      timestamp: 'date',\n      upper_bound: 'float',\n      lower_bound: 'float',\n      trigger_alert: 'float'\n    };\n\n    if (window.perspective && window.perspective.worker()) {\n      this.table = window.perspective.worker().table(schema);\n    }\n    if (this.table) {\n      // Load the `table` in the `<perspective-viewer>` DOM reference.\n      elem.load(this.table);\n      elem.setAttribute('view', 'y_line');\n      elem.setAttribute('row-pivots', '[\"timestamp\"]');\n      elem.setAttribute('columns', '[\"ratio\", \"lower_bound\", \"upper_bound\", \"trigger_alert\"]');\n      elem.setAttribute('aggregates', JSON.stringify({\n        price_abc: 'avg',\n        price_def: 'avg',\n        ratio:'avg',\n        timestamp: 'distinct count',\n        upper_bound: 'avg',\n        lower_bound: 'avg',\n        trigger_alert: 'avg',\n      }));\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.table) {\n      this.table.update([\n        DataManipulator.generateRow(this.props.data),\n      ]);\n    }\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}